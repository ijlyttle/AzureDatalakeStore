% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/append.R
\name{adls_append}
\alias{adls_append}
\title{Append to a file.}
\usage{
adls_append(adls, file, path)
}
\arguments{
\item{adls}{\code{adls} S3 object, generated using \code{\link[=adls]{adls()}}.}

\item{file}{\code{form_file} S3 object, representing the "thing" to be uploaded.
You can compose this using \code{\link[httr:upload_file]{httr::upload_file()}} or \code{\link[curl:form_file]{curl::form_file()}}.}

\item{path}{\code{character}, remote path, defined with respect to root-path
in \code{adls$base_url}. You may find \code{\link[=file.path]{file.path()}} to be useful to compose the path.}
}
\value{
A \code{logical} indicating success of the operation.
}
\description{
Append to a file.
}
\examples{
\dontrun{
  # create token (assumes Azure native app)
  token <- AzureOAuth::oauth_token_azure(
    tenant_id = "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
    application_id = "ffffffff-gggg-hhhh-iiii-jjjjjjjjjjjj",
    name = "foo"
  )

  # create adls object with base-URL and token
  adls_example <- adls(
    base_url = adls_url("bar"),
    token = token
  )

  # for this example, write a temporary file
  temp_file <- tempfile(fileext = ".csv")
  write.csv(iris, file = temp_file)

  # upload file
  adls_create(
    adls_example,
    file = httr::file_upload(temp_file),
    path = "iris.csv"
  )

  # append with another copy of iris.csv
  adls_append(
    adls_example,
    file = httr::file_upload(temp_file),
    path = "iris.csv"
  )
}
}
\seealso{
WebHDFS documentation for \href{http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/WebHDFS.html#Append_to_a_File}{"Append to a File"}
}
